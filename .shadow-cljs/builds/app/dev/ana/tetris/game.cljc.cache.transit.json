["^ ","~:output",["^ ","~:js","goog.provide('tetris.game');\ntetris.game.rows = (20);\ntetris.game.cols = (10);\ntetris.game.board = cljs.core.vec(cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(tetris.game.rows,cljs.core.vec(cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(tetris.game.cols,\" \"))));\ntetris.game.I = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(null,\"I\",\"I\",1827140963),new cljs.core.Keyword(null,\"mid\",\"mid\",-2123385246),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(4),(1)], null),new cljs.core.Keyword(null,\"coords\",\"coords\",-599429112),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(3),(1)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(4),(1)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(5),(1)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(6),(1)], null)], null)], null);\ntetris.game.J = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(null,\"J\",\"J\",1394734828),new cljs.core.Keyword(null,\"mid\",\"mid\",-2123385246),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(4),(1)], null),new cljs.core.Keyword(null,\"coords\",\"coords\",-599429112),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(3),(1)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(4),(1)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(5),(1)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(5),(0)], null)], null)], null);\ntetris.game.L = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(null,\"L\",\"L\",-1038307519),new cljs.core.Keyword(null,\"mid\",\"mid\",-2123385246),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(4),(1)], null),new cljs.core.Keyword(null,\"coords\",\"coords\",-599429112),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(3),(1)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(4),(1)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(5),(1)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(3),(0)], null)], null)], null);\ntetris.game.O = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(null,\"O\",\"O\",795252742),new cljs.core.Keyword(null,\"mid\",\"mid\",-2123385246),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(4),(0)], null),new cljs.core.Keyword(null,\"coords\",\"coords\",-599429112),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(4),(0)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(5),(0)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(4),(1)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(5),(1)], null)], null)], null);\ntetris.game.S = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(null,\"S\",\"S\",1267293308),new cljs.core.Keyword(null,\"mid\",\"mid\",-2123385246),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(4),(1)], null),new cljs.core.Keyword(null,\"coords\",\"coords\",-599429112),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(4),(1)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(4),(0)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(5),(0)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(3),(1)], null)], null)], null);\ntetris.game.T = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(null,\"T\",\"T\",175240877),new cljs.core.Keyword(null,\"mid\",\"mid\",-2123385246),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(4),(1)], null),new cljs.core.Keyword(null,\"coords\",\"coords\",-599429112),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(3),(1)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(4),(1)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(5),(1)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(4),(0)], null)], null)], null);\ntetris.game.Z = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),new cljs.core.Keyword(null,\"Z\",\"Z\",459124588),new cljs.core.Keyword(null,\"mid\",\"mid\",-2123385246),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(4),(1)], null),new cljs.core.Keyword(null,\"coords\",\"coords\",-599429112),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(4),(0)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(4),(1)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(5),(1)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(3),(0)], null)], null)], null);\ntetris.game.get_random_piece = (function tetris$game$get_random_piece(){\nreturn cljs.core.rand_nth(new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [tetris.game.I,tetris.game.J,tetris.game.L,tetris.game.O,tetris.game.S,tetris.game.T,tetris.game.Z], null));\n});\ntetris.game.new_game_state = (function tetris$game$new_game_state(){\nreturn new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null,\"board\",\"board\",-1907017633),tetris.game.board,new cljs.core.Keyword(null,\"active-piece\",\"active-piece\",600992279),null,new cljs.core.Keyword(null,\"game-over?\",\"game-over?\",432859304),false,new cljs.core.Keyword(null,\"score\",\"score\",-1963588780),(0),new cljs.core.Keyword(null,\"level\",\"level\",1290497552),(1),new cljs.core.Keyword(null,\"lines-cleared\",\"lines-cleared\",1628289668),(0),new cljs.core.Keyword(null,\"next3\",\"next3\",481836119),cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$2((3),tetris.game.get_random_piece)], null);\n});\ntetris.game.game_state = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(tetris.game.new_game_state());\ntetris.game.clear_piece = (function tetris$game$clear_piece(board,p__55552){\nvar map__55553 = p__55552;\nvar map__55553__$1 = cljs.core.__destructure_map(map__55553);\nvar mid = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__55553__$1,new cljs.core.Keyword(null,\"mid\",\"mid\",-2123385246));\nvar coords = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__55553__$1,new cljs.core.Keyword(null,\"coords\",\"coords\",-599429112));\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__55550_SHARP_,p2__55551_SHARP_){\nreturn cljs.core.assoc_in(p1__55550_SHARP_,cljs.core.reverse(p2__55551_SHARP_),\" \");\n}),board,coords);\n});\ntetris.game.place_piece = (function tetris$game$place_piece(board,active_piece,new_piece){\nvar new_board = tetris.game.clear_piece(board,active_piece);\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__55554_SHARP_,p2__55555_SHARP_){\nreturn cljs.core.assoc_in(p1__55554_SHARP_,cljs.core.reverse(p2__55555_SHARP_),new cljs.core.Keyword(null,\"type\",\"type\",1174270348).cljs$core$IFn$_invoke$arity$1(active_piece));\n}),new_board,new cljs.core.Keyword(null,\"coords\",\"coords\",-599429112).cljs$core$IFn$_invoke$arity$1(new_piece));\n});\ntetris.game.piece_fits_QMARK_ = (function tetris$game$piece_fits_QMARK_(board,p__55556){\nvar map__55557 = p__55556;\nvar map__55557__$1 = cljs.core.__destructure_map(map__55557);\nvar mid = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__55557__$1,new cljs.core.Keyword(null,\"mid\",\"mid\",-2123385246));\nvar coords = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__55557__$1,new cljs.core.Keyword(null,\"coords\",\"coords\",-599429112));\nvar vec__55558 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tetris.game.cols,tetris.game.rows], null);\nvar max_x = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__55558,(0),null);\nvar max_y = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__55558,(1),null);\nvar not_occupied = (function (x,y){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\" \",cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(board,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [y,x], null)));\n});\nreturn cljs.core.every_QMARK_((function (p__55561){\nvar vec__55562 = p__55561;\nvar x = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__55562,(0),null);\nvar y = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__55562,(1),null);\nreturn (((x < max_x)) && ((((y < max_y)) && (not_occupied(x,y)))));\n}),coords);\n});\ntetris.game.rotate_piece = (function tetris$game$rotate_piece(p__55567){\nvar map__55568 = p__55567;\nvar map__55568__$1 = cljs.core.__destructure_map(map__55568);\nvar piece = map__55568__$1;\nvar type = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__55568__$1,new cljs.core.Keyword(null,\"type\",\"type\",1174270348));\nvar mid = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__55568__$1,new cljs.core.Keyword(null,\"mid\",\"mid\",-2123385246));\nvar coords = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__55568__$1,new cljs.core.Keyword(null,\"coords\",\"coords\",-599429112));\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(type,new cljs.core.Keyword(null,\"O\",\"O\",795252742))){\nreturn piece;\n} else {\nvar rasterized_coords = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__55565_SHARP_){\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$3(cljs.core._,p1__55565_SHARP_,mid);\n}),coords);\nvar rotated = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p__55569){\nvar vec__55570 = p__55569;\nvar x = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__55570,(0),null);\nvar y = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__55570,(1),null);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(- y),x], null);\n}),rasterized_coords);\nvar coords_SINGLEQUOTE_ = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__55566_SHARP_){\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$3(cljs.core._PLUS_,mid,p1__55566_SHARP_);\n}),rotated);\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(piece,new cljs.core.Keyword(null,\"coords\",\"coords\",-599429112),coords_SINGLEQUOTE_);\n}\n});\ntetris.game.rotate_active_piece = (function tetris$game$rotate_active_piece(p__55573){\nvar map__55574 = p__55573;\nvar map__55574__$1 = cljs.core.__destructure_map(map__55574);\nvar game_state = map__55574__$1;\nvar board = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__55574__$1,new cljs.core.Keyword(null,\"board\",\"board\",-1907017633));\nvar active_piece = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__55574__$1,new cljs.core.Keyword(null,\"active-piece\",\"active-piece\",600992279));\nvar r = tetris.game.rotate_piece(active_piece);\nif(tetris.game.piece_fits_QMARK_(tetris.game.clear_piece(board,active_piece),r)){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.update.cljs$core$IFn$_invoke$arity$5(game_state,new cljs.core.Keyword(null,\"board\",\"board\",-1907017633),tetris.game.place_piece,active_piece,r),new cljs.core.Keyword(null,\"active-piece\",\"active-piece\",600992279),r);\n} else {\nreturn game_state;\n}\n});\ntetris.game.move_piece = (function tetris$game$move_piece(p__55577,dir){\nvar map__55578 = p__55577;\nvar map__55578__$1 = cljs.core.__destructure_map(map__55578);\nvar piece = map__55578__$1;\nvar mid = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__55578__$1,new cljs.core.Keyword(null,\"mid\",\"mid\",-2123385246));\nvar coords = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__55578__$1,new cljs.core.Keyword(null,\"coords\",\"coords\",-599429112));\nvar dir__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"left\",\"left\",-399115937),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(-1),(0)], null),new cljs.core.Keyword(null,\"right\",\"right\",-452581833),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(1),(0)], null),new cljs.core.Keyword(null,\"down\",\"down\",1565245570),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(0),(1)], null)], null),dir);\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$3(cljs.core.update.cljs$core$IFn$_invoke$arity$3(piece,new cljs.core.Keyword(null,\"coords\",\"coords\",-599429112),(function (p1__55575_SHARP_){\nreturn cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$3(cljs.core.mapv,cljs.core._PLUS_,dir__$1),p1__55575_SHARP_);\n})),new cljs.core.Keyword(null,\"mid\",\"mid\",-2123385246),(function (p1__55576_SHARP_){\nreturn cljs.core.mapv.cljs$core$IFn$_invoke$arity$3(cljs.core._PLUS_,p1__55576_SHARP_,dir__$1);\n}));\n});\ntetris.game.piece_down = (function tetris$game$piece_down(piece){\nreturn tetris.game.move_piece(piece,new cljs.core.Keyword(null,\"down\",\"down\",1565245570));\n});\ntetris.game.piece_left = (function tetris$game$piece_left(piece){\nreturn tetris.game.move_piece(piece,new cljs.core.Keyword(null,\"left\",\"left\",-399115937));\n});\ntetris.game.piece_right = (function tetris$game$piece_right(piece){\nreturn tetris.game.move_piece(piece,new cljs.core.Keyword(null,\"right\",\"right\",-452581833));\n});\ntetris.game.make_new_rows = (function tetris$game$make_new_rows(n){\nreturn cljs.core.vec(cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(n,cljs.core.vec(cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(tetris.game.cols,\" \"))));\n});\ntetris.game.row_full_QMARK_ = (function tetris$game$row_full_QMARK_(row){\nreturn cljs.core.every_QMARK_(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(cljs.core.not_EQ_,\" \"),row);\n});\ntetris.game.clear_rows = (function tetris$game$clear_rows(p__55579){\nvar map__55580 = p__55579;\nvar map__55580__$1 = cljs.core.__destructure_map(map__55580);\nvar game_state = map__55580__$1;\nvar board = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__55580__$1,new cljs.core.Keyword(null,\"board\",\"board\",-1907017633));\nvar active_piece = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__55580__$1,new cljs.core.Keyword(null,\"active-piece\",\"active-piece\",600992279));\nvar score = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__55580__$1,new cljs.core.Keyword(null,\"score\",\"score\",-1963588780));\nvar level = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__55580__$1,new cljs.core.Keyword(null,\"level\",\"level\",1290497552));\nvar lines_cleared = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__55580__$1,new cljs.core.Keyword(null,\"lines-cleared\",\"lines-cleared\",1628289668));\nvar cleared = cljs.core.remove.cljs$core$IFn$_invoke$arity$2(tetris.game.row_full_QMARK_,board);\nvar ncleared = (tetris.game.rows - cljs.core.count(cleared));\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(game_state,new cljs.core.Keyword(null,\"board\",\"board\",-1907017633),cljs.core.vec(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(tetris.game.make_new_rows(ncleared),cleared)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"score\",\"score\",-1963588780),(score + (((ncleared * (100)) * level) + (((ncleared >= (4)))?(500):(0)))),new cljs.core.Keyword(null,\"lines-cleared\",\"lines-cleared\",1628289668),(lines_cleared + ncleared),new cljs.core.Keyword(null,\"ghost-piece\",\"ghost-piece\",1840118358),null], 0));\n});\ntetris.game.game_down = (function tetris$game$game_down(p__55581){\nvar map__55582 = p__55581;\nvar map__55582__$1 = cljs.core.__destructure_map(map__55582);\nvar game_state = map__55582__$1;\nvar board = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__55582__$1,new cljs.core.Keyword(null,\"board\",\"board\",-1907017633));\nvar active_piece = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__55582__$1,new cljs.core.Keyword(null,\"active-piece\",\"active-piece\",600992279));\nvar score = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__55582__$1,new cljs.core.Keyword(null,\"score\",\"score\",-1963588780));\nvar lock_delay_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__55582__$1,new cljs.core.Keyword(null,\"lock-delay?\",\"lock-delay?\",1333128343));\nvar piece = tetris.game.piece_down(active_piece);\nif(tetris.game.piece_fits_QMARK_(tetris.game.clear_piece(board,active_piece),piece)){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.update.cljs$core$IFn$_invoke$arity$5(game_state,new cljs.core.Keyword(null,\"board\",\"board\",-1907017633),tetris.game.place_piece,active_piece,piece),new cljs.core.Keyword(null,\"active-piece\",\"active-piece\",600992279),piece);\n} else {\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(game_state,new cljs.core.Keyword(null,\"lock-delay?\",\"lock-delay?\",1333128343),true);\n}\n});\ntetris.game.hard_drop = (function tetris$game$hard_drop(game_state){\nreturn cljs.core.some((function (p1__55583_SHARP_){\nif(cljs.core.truth_(new cljs.core.Keyword(null,\"lock-delay?\",\"lock-delay?\",1333128343).cljs$core$IFn$_invoke$arity$1(p1__55583_SHARP_))){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(p1__55583_SHARP_,new cljs.core.Keyword(null,\"locked?\",\"locked?\",995448757),true,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"lock-delay?\",\"lock-delay?\",1333128343),false], 0));\n} else {\nreturn null;\n}\n}),cljs.core.iterate(tetris.game.game_down,game_state));\n});\ntetris.game.lock_piece = (function tetris$game$lock_piece(game_state){\nreturn tetris.game.hard_drop(cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(game_state,new cljs.core.Keyword(null,\"locked?\",\"locked?\",995448757),true,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"lock-delay?\",\"lock-delay?\",1333128343),false], 0)));\n});\ntetris.game.add_ghost_piece = (function tetris$game$add_ghost_piece(game_state){\nvar ghost = new cljs.core.Keyword(null,\"active-piece\",\"active-piece\",600992279).cljs$core$IFn$_invoke$arity$1(cljs.core.last(cljs.core.take_while.cljs$core$IFn$_invoke$arity$2((function (p1__55584_SHARP_){\nreturn cljs.core.not(new cljs.core.Keyword(null,\"lock-delay?\",\"lock-delay?\",1333128343).cljs$core$IFn$_invoke$arity$1(p1__55584_SHARP_));\n}),cljs.core.iterate(tetris.game.game_down,game_state))));\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(game_state,new cljs.core.Keyword(null,\"ghost-piece\",\"ghost-piece\",1840118358),ghost);\n});\ntetris.game.spawn_piece = (function tetris$game$spawn_piece(p__55585){\nvar map__55586 = p__55585;\nvar map__55586__$1 = cljs.core.__destructure_map(map__55586);\nvar game_state = map__55586__$1;\nvar board = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__55586__$1,new cljs.core.Keyword(null,\"board\",\"board\",-1907017633));\nvar active_piece = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__55586__$1,new cljs.core.Keyword(null,\"active-piece\",\"active-piece\",600992279));\nvar next3 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__55586__$1,new cljs.core.Keyword(null,\"next3\",\"next3\",481836119));\nvar spawned = cljs.core.first(next3);\nif((!(tetris.game.piece_fits_QMARK_(board,spawned)))){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(game_state,new cljs.core.Keyword(null,\"game-over?\",\"game-over?\",432859304),true);\n} else {\nreturn tetris.game.add_ghost_piece(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.update.cljs$core$IFn$_invoke$arity$5(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(game_state,new cljs.core.Keyword(null,\"locked?\",\"locked?\",995448757)),new cljs.core.Keyword(null,\"board\",\"board\",-1907017633),tetris.game.place_piece,spawned,spawned),new cljs.core.Keyword(null,\"active-piece\",\"active-piece\",600992279),spawned),new cljs.core.Keyword(null,\"next3\",\"next3\",481836119),cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(next3),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [tetris.game.get_random_piece()], null))));\n}\n});\ntetris.game.game_move = (function tetris$game$game_move(p__55587,move_func){\nvar map__55588 = p__55587;\nvar map__55588__$1 = cljs.core.__destructure_map(map__55588);\nvar game_state = map__55588__$1;\nvar board = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__55588__$1,new cljs.core.Keyword(null,\"board\",\"board\",-1907017633));\nvar active_piece = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__55588__$1,new cljs.core.Keyword(null,\"active-piece\",\"active-piece\",600992279));\nvar score = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__55588__$1,new cljs.core.Keyword(null,\"score\",\"score\",-1963588780));\nvar piece = (move_func.cljs$core$IFn$_invoke$arity$1 ? move_func.cljs$core$IFn$_invoke$arity$1(active_piece) : move_func.call(null,active_piece));\nif(tetris.game.piece_fits_QMARK_(tetris.game.clear_piece(board,active_piece),piece)){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.update.cljs$core$IFn$_invoke$arity$5(game_state,new cljs.core.Keyword(null,\"board\",\"board\",-1907017633),tetris.game.place_piece,active_piece,piece),new cljs.core.Keyword(null,\"active-piece\",\"active-piece\",600992279),piece);\n} else {\nreturn game_state;\n}\n});\ntetris.game.game_left = (function tetris$game$game_left(game_state){\nreturn tetris.game.game_move(game_state,tetris.game.piece_left);\n});\ntetris.game.game_right = (function tetris$game$game_right(game_state){\nreturn tetris.game.game_move(game_state,tetris.game.piece_right);\n});\ntetris.game.move = (function tetris$game$move(dir,game_state){\nif(cljs.core.truth_(new cljs.core.Keyword(null,\"locked?\",\"locked?\",995448757).cljs$core$IFn$_invoke$arity$1(game_state))){\nreturn game_state;\n} else {\nreturn tetris.game.add_ghost_piece((function (){var G__55589 = dir;\nswitch (G__55589) {\ncase \"U\":\nreturn tetris.game.rotate_active_piece(game_state);\n\nbreak;\ncase \"D\":\nreturn tetris.game.game_down(game_state);\n\nbreak;\ncase \"L\":\nreturn tetris.game.game_left(game_state);\n\nbreak;\ncase \"R\":\nreturn tetris.game.game_right(game_state);\n\nbreak;\ncase \"S\":\nreturn tetris.game.hard_drop(game_state);\n\nbreak;\ndefault:\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__55589)].join('')));\n\n}\n})());\n}\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","tetris/game.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",16],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.pprint","~$cljs.pprint","~$clojure.spec.alpha","~$cljs.spec.alpha","~$react","~$module$node_modules$react$index","~$react-dom","~$module$node_modules$react_dom$index","~$clojure.core.async","~$cljs.core.async"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$tetris.game","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$cljs.core","^Q","~$goog","^R"],"~:seen",["^J",[]],"~:uses",null,"~:require-macros",["^ ","^Q","^Q"],"~:form",["~#list",["~$ns","^L"]],"~:flags",["^ "],"~:js-deps",["^ "],"~:deps",["^R","^Q"]],"^N","^L","~:resource-id",["~:shadow.build.classpath/resource","tetris/game.cljc"],"~:compiled-at",1629499098405,"~:resource-name","tetris/game.cljc","~:warnings",[],"~:source","(ns tetris.game)\n\n(def rows 20)\n(def cols 10)\n(def board (vec (repeat rows (vec (repeat cols  \" \")))))\n\n;; pieces, along with their starting positions and rotation-center (:mid)\n(def I {:type :I :mid [4 1] :coords [[3 1] [4 1] [5 1] [6 1]]})\n(def J {:type :J :mid [4 1] :coords [[3 1] [4 1] [5 1] [5 0]]})\n(def L {:type :L :mid [4 1] :coords [[3 1] [4 1] [5 1] [3 0]]})\n(def O {:type :O :mid [4 0] :coords [[4 0] [5 0] [4 1] [5 1]]})\n(def S {:type :S :mid [4 1] :coords [[4 1] [4 0] [5 0] [3 1]]})\n(def T {:type :T :mid [4 1] :coords [[3 1] [4 1] [5 1] [4 0]]})\n(def Z {:type :Z :mid [4 1] :coords [[4 0] [4 1] [5 1] [3 0]]})\n\n(defn get-random-piece [] (rand-nth [I J L O S T Z]))\n\n(defn new-game-state []\n  {:board board\n   :active-piece nil\n   :game-over? false\n   :score 0\n   :level 1\n   :lines-cleared 0\n   :next3 (repeatedly 3 get-random-piece)})\n\n(def game-state (atom (new-game-state)))\n\n(defn clear-piece [board {:keys [mid coords]}]\n  (reduce #(assoc-in %1 (reverse %2) \" \") board coords))\n\n(defn place-piece [board active-piece new-piece]\n  (let [new-board (clear-piece board active-piece)]\n    (reduce #(assoc-in %1 (reverse %2) (:type active-piece))\n            new-board\n            (:coords new-piece))))\n\n(defn piece-fits? [board {:keys [mid coords]}]\n  (let [[max-x max-y] [cols rows]\n        not-occupied (fn [x y] (= \" \" (get-in board [y x])))]\n    (every? (fn [[x y]] (and (< x max-x)\n                             (< y max-y)\n                             (not-occupied x y)))\n            coords)))\n;; need to store piece type so we know if it's an \"O\" which doesn't rotate :/\n(defn rotate-piece [{:keys [type mid coords] :as piece}]\n  (if (= type :O)\n    piece\n    (let [rasterized-coords (map #(map - % mid) coords)\n          rotated (map (fn [[x y]] [(- y) x]) rasterized-coords)\n          coords' (map #(map + mid %) rotated)]\n      (assoc piece :coords coords'))))\n\n(defn rotate-active-piece [{:keys [board active-piece] :as game-state}]\n  (let [r (rotate-piece active-piece)]\n    ;; TODO: duplication in this and down move, clear piece to check if fits\n    ;; then clear piece again before placing (in place-piece)\n    (if (piece-fits? (clear-piece board active-piece) r)\n      (-> game-state (update :board place-piece active-piece r) (assoc :active-piece r))\n      game-state)))\n\n(defn move-piece [{:keys [mid coords] :as piece} dir]\n  (let [dir (get {:left [-1 0] :right [1 0] :down [0 1]} dir)]\n    (-> piece\n        (update :coords #(mapv (partial mapv + dir) %))\n        (update :mid #(mapv + % dir)))))\n\n(defn piece-down [piece] (move-piece piece :down))\n(defn piece-left [piece] (move-piece piece :left))\n(defn piece-right [piece] (move-piece piece :right))\n\n(defn make-new-rows [n]\n  (vec (repeat n (vec (repeat cols \" \")))))\n\n(defn row-full? [row]\n  (every? (partial not= \" \") row))\n\n(defn clear-rows [{:keys [board active-piece score level lines-cleared] :as game-state}]\n  (let [cleared (remove row-full? board)\n        ncleared (- rows (count cleared))]\n    (assoc game-state\n      :board (vec (concat (make-new-rows ncleared)\n              cleared))\n      :score (+ score (+ (* ncleared 100 level)\n                         (if (>= ncleared 4) 500 0)))\n      :lines-cleared (+ lines-cleared ncleared)\n      :ghost-piece nil)))\n\n(defn game-down [{:keys [board active-piece score lock-delay?] :as game-state}]\n  (let [piece (piece-down active-piece)]\n    (if (piece-fits? (clear-piece board active-piece) piece)\n      (-> game-state\n          (update :board place-piece active-piece piece)\n          (assoc :active-piece piece))\n      (assoc game-state :lock-delay? true))))\n\n(defn hard-drop [game-state]\n  ;; start lock delay when you can't move down anymore\n  (some #(when (:lock-delay? %1) (assoc %1 :locked? true :lock-delay? false))\n        (iterate game-down game-state)))\n\n(defn lock-piece [game-state]\n  (hard-drop (assoc game-state\n                    :locked? true\n                    :lock-delay? false)))\n\n(defn add-ghost-piece [game-state]\n  (let [ghost (->> game-state\n                   (iterate game-down)\n                   (take-while #(not (:lock-delay? %)))\n                   last\n                   :active-piece)]\n    (assoc game-state :ghost-piece ghost)))\n\n(defn spawn-piece [{:keys [board active-piece next3] :as game-state}]\n  (let [spawned (first next3)]\n    (if-not (piece-fits? board spawned)\n      (assoc game-state :game-over? true)\n      (-> game-state\n          (dissoc :locked?)\n          (update :board place-piece spawned spawned)\n          (assoc :active-piece spawned)\n          (assoc :next3 (concat (rest next3) [(get-random-piece)]))\n          add-ghost-piece))))\n\n(defn game-move [{:keys [board active-piece score] :as game-state} move-func]\n  (let [piece (move-func active-piece)]\n    (if (piece-fits? (clear-piece board active-piece) piece)\n      (-> game-state\n          (update :board place-piece active-piece piece)\n          (assoc :active-piece piece))\n      game-state)))\n\n(defn game-left [game-state] (game-move game-state piece-left))\n(defn game-right [game-state] (game-move game-state piece-right))\n\n(defn move [dir game-state]\n  (if (:locked? game-state)\n    game-state\n    (-> (case dir\n          \"U\" (rotate-active-piece game-state)\n          \"D\" (game-down game-state)\n          \"L\" (game-left game-state)\n          \"R\" (game-right game-state)\n          \"S\" (hard-drop game-state))\n      add-ghost-piece)))\n","~:reader-features",["^J",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings","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","names",["tetris.game/rows","tetris.game/cols","tetris.game/board","cljs.core/vec","cljs.core.repeat","tetris.game/I","tetris.game/J","tetris.game/L","tetris.game/O","tetris.game/S","tetris.game/T","tetris.game/Z","tetris.game/get-random-piece","cljs.core/rand-nth","tetris.game/new-game-state","cljs.core.repeatedly","tetris.game/game-state","cljs.core.atom","p__55552","map__55553","cljs.core/--destructure-map","cljs.core.get","tetris.game/clear-piece","board","mid","coords","p1__55550#","p2__55551#","cljs.core.reduce","cljs.core/assoc-in","cljs.core/reverse","tetris.game/place-piece","active-piece","new-piece","new-board","p1__55554#","p2__55555#","p__55556","map__55557","tetris.game/piece-fits?","vec__55558","cljs.core.nth","max-x","max-y","not-occupied","x","y","cljs.core._EQ_","cljs.core.get_in","cljs.core/every?","p__55561","vec__55562","p__55567","map__55568","tetris.game/rotate-piece","type","piece","rasterized-coords","p1__55565#","cljs.core.map","cljs.core/-","rotated","p__55569","vec__55570","coords'","p1__55566#","cljs.core/+","cljs.core.assoc","p__55573","map__55574","tetris.game/rotate-active-piece","game-state","r","cljs.core.update","p__55577","map__55578","tetris.game/move-piece","dir","p1__55575#","cljs.core.mapv","cljs.core.partial","cljs.core/mapv","p1__55576#","tetris.game/piece-down","tetris.game/piece-left","tetris.game/piece-right","tetris.game/make-new-rows","n","tetris.game/row-full?","row","cljs.core/not=","p__55579","map__55580","tetris.game/clear-rows","score","level","lines-cleared","cleared","cljs.core.remove","ncleared","cljs.core/count","cljs.core.concat","p__55581","map__55582","tetris.game/game-down","lock-delay?","tetris.game/hard-drop","p1__55583#","cljs.core/some","cljs.core/iterate","tetris.game/lock-piece","tetris.game/add-ghost-piece","ghost","p1__55584#","cljs.core.take_while","cljs.core/not","cljs.core/last","p__55585","map__55586","tetris.game/spawn-piece","next3","spawned","cljs.core/first","cljs.core.dissoc","cljs.core/rest","p__55587","map__55588","tetris.game/game-move","move-func","tetris.game/game-left","tetris.game/game-right","tetris.game/move","G__55589","js/Error"]],"~:used-vars",["^J",["~$cljs.core/--destructure-map","~$tetris.game/row-full?","~$tetris.game/place-piece","~$tetris.game/piece-left","~$cljs.core/rest","~$cljs.core/repeatedly","~$cljs.core/=","~$cljs.core/partial","~$cljs.core/take-while","~$tetris.game/game-right","~$cljs.core/count","~$tetris.game/clear-rows","~$cljs.core/reduce","~$tetris.game/move-piece","~$tetris.game/S","~$tetris.game/game-move","~$cljs.core/last","~$cljs.core/mapv","~$cljs.core/not=","~$cljs.core/iterate","~$cljs.core/dissoc","~$cljs.core/atom","~$tetris.game/rotate-active-piece","~$tetris.game/O","~$cljs.core/concat","~$tetris.game/spawn-piece","~$tetris.game/Z","~$tetris.game/J","~$cljs.core/-","~$cljs.core/rand-nth","~$cljs.core/update","~$cljs.core/map","~$tetris.game/game-down","~$tetris.game/get-random-piece","~$cljs.core/get-in","~$tetris.game/cols","~$tetris.game/L","~$tetris.game/make-new-rows","~$tetris.game/game-state","~$cljs.core/get","~$cljs.core/remove","~$tetris.game/I","~$tetris.game/T","~$tetris.game/lock-piece","~$cljs.core/nth","~$tetris.game/hard-drop","~$tetris.game/add-ghost-piece","~$cljs.core/vec","~$tetris.game/piece-down","~$tetris.game/piece-fits?","~$cljs.core/not","~$cljs.core/assoc","~$cljs.core/assoc-in","~$cljs.core/reverse","~$tetris.game/piece-right","~$cljs.core/repeat","~$tetris.game/move","~$tetris.game/new-game-state","~$tetris.game/game-left","~$cljs.core/first","~$tetris.game/rotate-piece","~$cljs.core/+","~$cljs.core/every?","~$js/Error","~$tetris.game/clear-piece","~$tetris.game/rows","~$cljs.core/some","~$tetris.game/board"]]],"~:cache-keys",["~#cmap",[["^11","goog/dom/tagname.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^J",[]],"~:deps-syms",["^R","~$goog.dom.HtmlElement"]]],["^11","goog/math/math.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2W",["^ ","^2X",null,"^2Y",["^J",[]],"^2Z",["^R","~$goog.array","~$goog.asserts"]]],["^11","goog/html/trustedtypes.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2W",["^ ","^2X",null,"^2Y",["^J",[]],"^2Z",["^R"]]],["^11","goog/labs/useragent/browser.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2W",["^ ","^2X",null,"^2Y",["^J",[]],"^2Z",["^R","^30","~$goog.labs.userAgent.util","~$goog.object","~$goog.string.internal"]]],["^11","goog/html/safeurl.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2W",["^ ","^2X",null,"^2Y",["^J",[]],"^2Z",["^R","^31","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^34"]]],["^11","goog/array/array.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2W",["^ ","^2X",null,"^2Y",["^J",[]],"^2Z",["^R","^31"]]],["^11","goog/debug/error.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2W",["^ ","^2X",null,"^2Y",["^J",[]],"^2Z",["^R"]]],["^11","goog/dom/nodetype.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2W",["^ ","^2X",null,"^2Y",["^J",[]],"^2Z",["^R"]]],["^11","goog/string/typedstring.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2W",["^ ","^2X",null,"^2Y",["^J",[]],"^2Z",["^R"]]],["^11","goog/object/object.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2W",["^ ","^2X",null,"^2Y",["^J",[]],"^2Z",["^R"]]],["^11","goog/dom/asserts.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2W",["^ ","^2X",null,"^2Y",["^J",[]],"^2Z",["^R","^31"]]],"~:SHADOW-TIMESTAMP",[1627943970000,1627943970000,1627943968000],["^11","goog/math/long.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2W",["^ ","^2X",null,"^2Y",["^J",[]],"^2Z",["^R","^31","~$goog.reflect"]]],["^11","goog/html/trustedresourceurl.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2W",["^ ","^2X",null,"^2Y",["^J",[]],"^2Z",["^R","^31","~$goog.fs.blob","^35","~$goog.html.SafeScript","~$goog.html.trustedtypes","^37","^38","^39","^3:"]]],["^11","goog/string/internal.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2W",["^ ","^2X",null,"^2Y",["^J",[]],"^2Z",["^R"]]],["^11","goog/functions/functions.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2W",["^ ","^2X",null,"^2Y",["^J",[]],"^2Z",["^R"]]],["^11","goog/html/safestyle.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2W",["^ ","^2X",null,"^2Y",["^J",[]],"^2Z",["^R","^30","^31","~$goog.html.SafeUrl","^39","^3:","^34"]]],["^11","goog/dom/safe.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2W",["^ ","^2X",null,"^2Y",["^J",[]],"^2Z",["^R","^31","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","^3>","~$goog.html.SafeStyle","^3@","^36","~$goog.html.uncheckedconversions","^39","^34"]]],["^11","goog/structs/map.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2W",["^ ","^2X",null,"^2Y",["^J",[]],"^2Z",["^R","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^11","goog/html/safehtml.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2W",["^ ","^2X",null,"^2Y",["^J",[]],"^2Z",["^R","^30","^31","~$goog.dom.TagName","~$goog.dom.tags","^3>","^3D","~$goog.html.SafeStyleSheet","^3@","^36","^3?","^37","^38","~$goog.labs.userAgent.browser","^33","^39","^3:","^34"]]],["^11","goog/dom/tags.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2W",["^ ","^2X",null,"^2Y",["^J",[]],"^2Z",["^R","^33"]]],["^11","goog/fs/blob.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2W",["^ ","^2X",null,"^2Y",["^J",[]],"^2Z",["^R","^30"]]],["^11","goog/asserts/asserts.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2W",["^ ","^2X",null,"^2Y",["^J",[]],"^2Z",["^R","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^11","goog/uri/uri.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2W",["^ ","^2X",null,"^2Y",["^J",[]],"^2Z",["^R","^30","^31","~$goog.string","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^11","goog/i18n/bidi.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2W",["^ ","^2X",null,"^2Y",["^J",[]],"^2Z",["^R"]]],["^11","goog/fs/url.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2W",["^ ","^2X",null,"^2Y",["^J",[]],"^2Z",["^R"]]],["^11","goog/base.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2W",["^ ","^2X",null,"^2Y",["^J",[]],"^2Z",[]]],["^11","goog/structs/structs.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2W",["^ ","^2X",null,"^2Y",["^J",[]],"^2Z",["^R","^30","^33"]]],["^11","tetris/game.cljc"],["13a6c6bb5bee4ce3b649ec25ca7acc49520a2583","^2W",["^ ","^2X",null,"^2Y",["^J",[]],"^2Z",["^R","^Q"]]],["^11","goog/string/string.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2W",["^ ","^2X",null,"^2Y",["^J",[]],"^2Z",["^R","~$goog.dom.safe","^3E","^39","^34"]]],["^11","goog/reflect/reflect.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2W",["^ ","^2X",null,"^2Y",["^J",[]],"^2Z",["^R"]]],["^11","goog/labs/useragent/util.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2W",["^ ","^2X",null,"^2Y",["^J",[]],"^2Z",["^R","^34"]]],["^11","goog/string/stringbuffer.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2W",["^ ","^2X",null,"^2Y",["^J",[]],"^2Z",["^R"]]],["^11","goog/iter/iter.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2W",["^ ","^2X",null,"^2Y",["^J",[]],"^2Z",["^R","^30","^31","^3B","~$goog.math"]]],["^11","goog/html/uncheckedconversions.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2W",["^ ","^2X",null,"^2Y",["^J",[]],"^2Z",["^R","^31","^3C","^3>","^3D","^3J","^3@","^36","^39","^34","^37"]]],["^11","goog/dom/htmlelement.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2W",["^ ","^2X",null,"^2Y",["^J",[]],"^2Z",["^R"]]],["^11","cljs/core.cljs"],["528fbd795675bc73c189ce8a8429415f03165a3b","^2W",["^ ","^2X",null,"^2Y",["^J",[]],"^2Z",["^R","~$goog.math.Long","~$goog.math.Integer","^3N","^33","^30","~$goog.Uri","~$goog.string.StringBuffer"]]],["^11","goog/html/safescript.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2W",["^ ","^2X",null,"^2Y",["^J",[]],"^2Z",["^R","^39","^3:","^3?","^31"]]],["^11","goog/html/safestylesheet.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2W",["^ ","^2X",null,"^2Y",["^J",[]],"^2Z",["^R","^39","^3D","^3:","^30","^33","^31","^34"]]],["^11","goog/math/integer.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2W",["^ ","^2X",null,"^2Y",["^J",[]],"^2Z",["^R","^3<"]]],["^11","goog/uri/utils.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2W",["^ ","^2X",null,"^2Y",["^J",[]],"^2Z",["^R","^31","^3N"]]],["^11","goog/string/const.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^2W",["^ ","^2X",null,"^2Y",["^J",[]],"^2Z",["^R","^31","^3:"]]]]],"~:clj-info",["^ ","jar:file:/Users/markwoodworth/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/edn.clj",1625243034000,"jar:file:/Users/markwoodworth/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/tagged_literals.cljc",1627943968000,"jar:file:/Users/markwoodworth/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/core.cljc",1627943968000,"jar:file:/Users/markwoodworth/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/analyzer/passes.cljc",1627943968000,"jar:file:/Users/markwoodworth/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/pprint.clj",1625243034000,"jar:file:/Users/markwoodworth/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/util.cljc",1627943968000,"jar:file:/Users/markwoodworth/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/analyzer/passes/and_or.cljc",1627943968000,"jar:file:/Users/markwoodworth/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/instant.clj",1625243034000,"jar:file:/Users/markwoodworth/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/impl/errors.clj",1627943967000,"jar:file:/Users/markwoodworth/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/reader_types.clj",1627943967000,"jar:file:/Users/markwoodworth/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/analyzer/impl.cljc",1627943968000,"jar:file:/Users/markwoodworth/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader.clj",1627943967000,"jar:file:/Users/markwoodworth/.m2/repository/org/clojure/data.json/2.4.0/data.json-2.4.0.jar!/clojure/data/json.clj",1627943967000,"jar:file:/Users/markwoodworth/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/compiler.cljc",1627943968000,"jar:file:/Users/markwoodworth/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/instant.clj",1627943968000,"jar:file:/Users/markwoodworth/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/analyzer.cljc",1627943968000,"jar:file:/Users/markwoodworth/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/source_map.clj",1627943968000,"jar:file:/Users/markwoodworth/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/string.clj",1625243034000,"jar:file:/Users/markwoodworth/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/source_map/base64_vlq.clj",1627943968000,"jar:file:/Users/markwoodworth/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/impl/inspect.clj",1627943967000,"jar:file:/Users/markwoodworth/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/externs.clj",1627943968000,"jar:file:/Users/markwoodworth/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/java/io.clj",1625243034000,"jar:file:/Users/markwoodworth/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/source_map/base64.clj",1627943968000,"jar:file:/Users/markwoodworth/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/set.clj",1625243034000,"jar:file:/Users/markwoodworth/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/default_data_readers.clj",1627943967000,"jar:file:/Users/markwoodworth/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/core.clj",1625243034000,"jar:file:/Users/markwoodworth/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/env.cljc",1627943968000,"jar:file:/Users/markwoodworth/.m2/repository/org/clojure/clojurescript/1.10.879/clojurescript-1.10.879.jar!/cljs/js_deps.cljc",1627943968000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","tetris/game.cljc","^7",1,"^8",5,"^9",1,"^:",16],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C","^D","^E","^F","^G"],"^H",null,"^I",["^J",[]],"^K","^L","^O",null,"^P",["^ ","^Q","^Q","^R","^R"],"^S",["^J",[]],"~:shadow/js-access-global",["^J",["Error"]],"^T",null,"~:defs",["^ ","~$game-move",["^ ","~:protocol-inline",null,"^5",["^ ","^6","tetris/game.cljc","^7",126,"^8",7,"^9",126,"^:",16,"~:arglists",["^W",["~$quote",["^W",[[["^ ","~:keys",["~$board","~$active-piece","~$score"],"~:as","~$game-state"],"~$move-func"]]]]]],"^K","^1L","^6","tetris/game.cljc","^:",16,"~:method-params",["^W",[["~$p__55587","^4X"]]],"~:protocol-impl",null,"~:arglists-meta",["^W",[null,null]],"^8",1,"~:variadic?",false,"^7",126,"~:ret-tag",["^J",[null,"~$clj","~$any"]],"^9",126,"~:max-fixed-arity",2,"~:fn-var",true,"^4P",["^W",["^4Q",["^W",[[["^ ","^4R",["^4S","^4T","^4U"],"^4V","^4W"],"^4X"]]]]]],"~$rotate-piece",["^ ","^4O",null,"^5",["^ ","^6","tetris/game.cljc","^7",46,"^8",7,"^9",46,"^:",19,"^4P",["^W",["^4Q",["^W",[[["^ ","^4R",["~$type","~$mid","~$coords"],"^4V","~$piece"]]]]]]],"^K","^2M","^6","tetris/game.cljc","^:",19,"^4Y",["^W",[["~$p__55567"]]],"^4[",null,"^50",["^W",[null,null]],"^8",1,"^51",false,"^7",46,"^52",["^J",[null,"^53","^54"]],"^9",46,"^55",1,"^56",true,"^4P",["^W",["^4Q",["^W",[[["^ ","^4R",["^58","^59","^5:"],"^4V","^5;"]]]]]]],"~$new-game-state",["^ ","^4O",null,"^5",["^ ","^6","tetris/game.cljc","^7",18,"^8",7,"^9",18,"^:",21,"^4P",["^W",["^4Q",["^W",[[]]]]]],"^K","^2J","^6","tetris/game.cljc","^:",21,"^4Y",["^W",[[]]],"^4[",null,"^50",["^W",[null,null]],"^8",1,"^51",false,"^7",18,"^52","~$cljs.core/IMap","^9",18,"^55",0,"^56",true,"^4P",["^W",["^4Q",["^W",[[]]]]]],"~$S",["^ ","^K","^1K","^6","tetris/game.cljc","^7",12,"^8",1,"^9",12,"^:",7,"^5",["^ ","^6","tetris/game.cljc","^7",12,"^8",6,"^9",12,"^:",7],"~:tag","^5>"],"~$game-down",["^ ","^4O",null,"^5",["^ ","^6","tetris/game.cljc","^7",89,"^8",7,"^9",89,"^:",16,"^4P",["^W",["^4Q",["^W",[[["^ ","^4R",["^4S","^4T","^4U","~$lock-delay?"],"^4V","^4W"]]]]]]],"^K","^21","^6","tetris/game.cljc","^:",16,"^4Y",["^W",[["~$p__55581"]]],"^4[",null,"^50",["^W",[null,null]],"^8",1,"^51",false,"^7",89,"^52",["^J",["^53","^54"]],"^9",89,"^55",1,"^56",true,"^4P",["^W",["^4Q",["^W",[[["^ ","^4R",["^4S","^4T","^4U","^5A"],"^4V","^4W"]]]]]]],"~$game-left",["^ ","^4O",null,"^5",["^ ","^6","tetris/game.cljc","^7",134,"^8",7,"^9",134,"^:",16,"^4P",["^W",["^4Q",["^W",[["^4W"]]]]]],"^K","^2K","^6","tetris/game.cljc","^:",16,"^4Y",["^W",[["^4W"]]],"^4[",null,"^50",["^W",[null,null]],"^8",1,"^51",false,"^7",134,"^52",["^J",[null,"^53","^54"]],"^9",134,"^55",1,"^56",true,"^4P",["^W",["^4Q",["^W",[["^4W"]]]]]],"^4S",["^ ","^K","^2T","^6","tetris/game.cljc","^7",5,"^8",1,"^9",5,"^:",11,"^5",["^ ","^6","tetris/game.cljc","^7",5,"^8",6,"^9",5,"^:",11],"^5?",["^J",["^53","~$cljs.core/IVector","^54","~$cljs.core/MetaFn","~$clj-nil"]]],"~$place-piece",["^ ","^4O",null,"^5",["^ ","^6","tetris/game.cljc","^7",32,"^8",7,"^9",32,"^:",18,"^4P",["^W",["^4Q",["^W",[["^4S","^4T","~$new-piece"]]]]]],"^K","^1?","^6","tetris/game.cljc","^:",18,"^4Y",["^W",[["^4S","^4T","^5H"]]],"^4[",null,"^50",["^W",[null,null]],"^8",1,"^51",false,"^7",32,"^52",["^J",[null,"^54"]],"^9",32,"^55",3,"^56",true,"^4P",["^W",["^4Q",["^W",[["^4S","^4T","^5H"]]]]]],"~$row-full?",["^ ","^4O",null,"^5",["^ ","^6","tetris/game.cljc","^7",75,"^8",7,"^9",75,"^:",16,"^4P",["^W",["^4Q",["^W",[["~$row"]]]]]],"^K","^1>","^6","tetris/game.cljc","^:",16,"^4Y",["^W",[["^5J"]]],"^4[",null,"^50",["^W",[null,null]],"^8",1,"^51",false,"^7",75,"^52","~$boolean","^9",75,"^55",1,"^56",true,"^4P",["^W",["^4Q",["^W",[["^5J"]]]]]],"~$L",["^ ","^K","^25","^6","tetris/game.cljc","^7",10,"^8",1,"^9",10,"^:",7,"^5",["^ ","^6","tetris/game.cljc","^7",10,"^8",6,"^9",10,"^:",7],"^5?","^5>"],"~$piece-left",["^ ","^4O",null,"^5",["^ ","^6","tetris/game.cljc","^7",69,"^8",7,"^9",69,"^:",17,"^4P",["^W",["^4Q",["^W",[["^5;"]]]]]],"^K","^1@","^6","tetris/game.cljc","^:",17,"^4Y",["^W",[["^5;"]]],"^4[",null,"^50",["^W",[null,null]],"^8",1,"^51",false,"^7",69,"^52",["^J",["^53","^54"]],"^9",69,"^55",1,"^56",true,"^4P",["^W",["^4Q",["^W",[["^5;"]]]]]],"~$game-right",["^ ","^4O",null,"^5",["^ ","^6","tetris/game.cljc","^7",135,"^8",7,"^9",135,"^:",17,"^4P",["^W",["^4Q",["^W",[["^4W"]]]]]],"^K","^1F","^6","tetris/game.cljc","^:",17,"^4Y",["^W",[["^4W"]]],"^4[",null,"^50",["^W",[null,null]],"^8",1,"^51",false,"^7",135,"^52",["^J",[null,"^53","^54"]],"^9",135,"^55",1,"^56",true,"^4P",["^W",["^4Q",["^W",[["^4W"]]]]]],"~$make-new-rows",["^ ","^4O",null,"^5",["^ ","^6","tetris/game.cljc","^7",72,"^8",7,"^9",72,"^:",20,"^4P",["^W",["^4Q",["^W",[["~$n"]]]]]],"^K","^26","^6","tetris/game.cljc","^:",20,"^4Y",["^W",[["~$n"]]],"^4[",null,"^50",["^W",[null,null]],"^8",1,"^51",false,"^7",72,"^52",["^J",["^53","^5D","^54","^5E","^5F"]],"^9",72,"^55",1,"^56",true,"^4P",["^W",["^4Q",["^W",[["~$n"]]]]]],"~$I",["^ ","^K","^2:","^6","tetris/game.cljc","^7",8,"^8",1,"^9",8,"^:",7,"^5",["^ ","^6","tetris/game.cljc","^7",8,"^8",6,"^9",8,"^:",7],"^5?","^5>"],"~$get-random-piece",["^ ","^4O",null,"^5",["^ ","^6","tetris/game.cljc","^7",16,"^8",7,"^9",16,"^:",23,"^4P",["^W",["^4Q",["^W",[[]]]]]],"^K","^22","^6","tetris/game.cljc","^:",23,"^4Y",["^W",[[]]],"^4[",null,"^50",["^W",[null,null]],"^8",1,"^51",false,"^7",16,"^52",["^J",["^54","^5F"]],"^9",16,"^55",0,"^56",true,"^4P",["^W",["^4Q",["^W",[[]]]]]],"~$spawn-piece",["^ ","^4O",null,"^5",["^ ","^6","tetris/game.cljc","^7",115,"^8",7,"^9",115,"^:",18,"^4P",["^W",["^4Q",["^W",[[["^ ","^4R",["^4S","^4T","~$next3"],"^4V","^4W"]]]]]]],"^K","^1V","^6","tetris/game.cljc","^:",18,"^4Y",["^W",[["~$p__55585"]]],"^4[",null,"^50",["^W",[null,null]],"^8",1,"^51",false,"^7",115,"^52",["^J",["^53","^54"]],"^9",115,"^55",1,"^56",true,"^4P",["^W",["^4Q",["^W",[[["^ ","^4R",["^4S","^4T","^5Q"],"^4V","^4W"]]]]]]],"~$O",["^ ","^K","^1T","^6","tetris/game.cljc","^7",11,"^8",1,"^9",11,"^:",7,"^5",["^ ","^6","tetris/game.cljc","^7",11,"^8",6,"^9",11,"^:",7],"^5?","^5>"],"~$piece-right",["^ ","^4O",null,"^5",["^ ","^6","tetris/game.cljc","^7",70,"^8",7,"^9",70,"^:",18,"^4P",["^W",["^4Q",["^W",[["^5;"]]]]]],"^K","^2G","^6","tetris/game.cljc","^:",18,"^4Y",["^W",[["^5;"]]],"^4[",null,"^50",["^W",[null,null]],"^8",1,"^51",false,"^7",70,"^52",["^J",["^53","^54"]],"^9",70,"^55",1,"^56",true,"^4P",["^W",["^4Q",["^W",[["^5;"]]]]]],"~$move",["^ ","^4O",null,"^5",["^ ","^6","tetris/game.cljc","^7",137,"^8",7,"^9",137,"^:",11,"^4P",["^W",["^4Q",["^W",[["~$dir","^4W"]]]]]],"^K","^2I","^6","tetris/game.cljc","^:",11,"^4Y",["^W",[["^5U","^4W"]]],"^4[",null,"^50",["^W",[null,null]],"^8",1,"^51",false,"^7",137,"^52",["^J",[null,"^53","^54"]],"^9",137,"^55",2,"^56",true,"^4P",["^W",["^4Q",["^W",[["^5U","^4W"]]]]]],"~$J",["^ ","^K","^1X","^6","tetris/game.cljc","^7",9,"^8",1,"^9",9,"^:",7,"^5",["^ ","^6","tetris/game.cljc","^7",9,"^8",6,"^9",9,"^:",7],"^5?","^5>"],"~$rotate-active-piece",["^ ","^4O",null,"^5",["^ ","^6","tetris/game.cljc","^7",54,"^8",7,"^9",54,"^:",26,"^4P",["^W",["^4Q",["^W",[[["^ ","^4R",["^4S","^4T"],"^4V","^4W"]]]]]]],"^K","^1S","^6","tetris/game.cljc","^:",26,"^4Y",["^W",[["~$p__55573"]]],"^4[",null,"^50",["^W",[null,null]],"^8",1,"^51",false,"^7",54,"^52",["^J",[null,"^53","^54"]],"^9",54,"^55",1,"^56",true,"^4P",["^W",["^4Q",["^W",[[["^ ","^4R",["^4S","^4T"],"^4V","^4W"]]]]]]],"~$Z",["^ ","^K","^1W","^6","tetris/game.cljc","^7",14,"^8",1,"^9",14,"^:",7,"^5",["^ ","^6","tetris/game.cljc","^7",14,"^8",6,"^9",14,"^:",7],"^5?","^5>"],"~$piece-fits?",["^ ","^4O",null,"^5",["^ ","^6","tetris/game.cljc","^7",38,"^8",7,"^9",38,"^:",18,"^4P",["^W",["^4Q",["^W",[["^4S",["^ ","^4R",["^59","^5:"]]]]]]]],"^K","^2B","^6","tetris/game.cljc","^:",18,"^4Y",["^W",[["^4S","~$p__55556"]]],"^4[",null,"^50",["^W",[null,null]],"^8",1,"^51",false,"^7",38,"^52","^5K","^9",38,"^55",2,"^56",true,"^4P",["^W",["^4Q",["^W",[["^4S",["^ ","^4R",["^59","^5:"]]]]]]]],"~$T",["^ ","^K","^2;","^6","tetris/game.cljc","^7",13,"^8",1,"^9",13,"^:",7,"^5",["^ ","^6","tetris/game.cljc","^7",13,"^8",6,"^9",13,"^:",7],"^5?","^5>"],"~$clear-piece",["^ ","^4O",null,"^5",["^ ","^6","tetris/game.cljc","^7",29,"^8",7,"^9",29,"^:",18,"^4P",["^W",["^4Q",["^W",[["^4S",["^ ","^4R",["^59","^5:"]]]]]]]],"^K","^2Q","^6","tetris/game.cljc","^:",18,"^4Y",["^W",[["^4S","~$p__55552"]]],"^4[",null,"^50",["^W",[null,null]],"^8",1,"^51",false,"^7",29,"^52",["^J",[null,"^54"]],"^9",29,"^55",2,"^56",true,"^4P",["^W",["^4Q",["^W",[["^4S",["^ ","^4R",["^59","^5:"]]]]]]]],"^4W",["^ ","^K","^27","^6","tetris/game.cljc","^7",27,"^8",1,"^9",27,"^:",16,"^5",["^ ","^6","tetris/game.cljc","^7",27,"^8",6,"^9",27,"^:",16],"^5?","~$cljs.core/Atom"],"~$rows",["^ ","^K","^2R","^6","tetris/game.cljc","^7",3,"^8",1,"^9",3,"^:",10,"^5",["^ ","^6","tetris/game.cljc","^7",3,"^8",6,"^9",3,"^:",10],"^5?","~$number"],"~$cols",["^ ","^K","^24","^6","tetris/game.cljc","^7",4,"^8",1,"^9",4,"^:",10,"^5",["^ ","^6","tetris/game.cljc","^7",4,"^8",6,"^9",4,"^:",10],"^5?","^62"],"~$add-ghost-piece",["^ ","^4O",null,"^5",["^ ","^6","tetris/game.cljc","^7",107,"^8",7,"^9",107,"^:",22,"^4P",["^W",["^4Q",["^W",[["^4W"]]]]]],"^K","^2?","^6","tetris/game.cljc","^:",22,"^4Y",["^W",[["^4W"]]],"^4[",null,"^50",["^W",[null,null]],"^8",1,"^51",false,"^7",107,"^52",["^J",["^53","^54"]],"^9",107,"^55",1,"^56",true,"^4P",["^W",["^4Q",["^W",[["^4W"]]]]]],"~$hard-drop",["^ ","^4O",null,"^5",["^ ","^6","tetris/game.cljc","^7",97,"^8",7,"^9",97,"^:",16,"^4P",["^W",["^4Q",["^W",[["^4W"]]]]]],"^K","^2>","^6","tetris/game.cljc","^:",16,"^4Y",["^W",[["^4W"]]],"^4[",null,"^50",["^W",[null,null]],"^8",1,"^51",false,"^7",97,"^52",["^J",["^54","^5F"]],"^9",97,"^55",1,"^56",true,"^4P",["^W",["^4Q",["^W",[["^4W"]]]]]],"~$lock-piece",["^ ","^4O",null,"^5",["^ ","^6","tetris/game.cljc","^7",102,"^8",7,"^9",102,"^:",17,"^4P",["^W",["^4Q",["^W",[["^4W"]]]]]],"^K","^2<","^6","tetris/game.cljc","^:",17,"^4Y",["^W",[["^4W"]]],"^4[",null,"^50",["^W",[null,null]],"^8",1,"^51",false,"^7",102,"^52",["^J",["^54","^5F"]],"^9",102,"^55",1,"^56",true,"^4P",["^W",["^4Q",["^W",[["^4W"]]]]]],"~$clear-rows",["^ ","^4O",null,"^5",["^ ","^6","tetris/game.cljc","^7",78,"^8",7,"^9",78,"^:",17,"^4P",["^W",["^4Q",["^W",[[["^ ","^4R",["^4S","^4T","^4U","~$level","~$lines-cleared"],"^4V","^4W"]]]]]]],"^K","^1H","^6","tetris/game.cljc","^:",17,"^4Y",["^W",[["~$p__55579"]]],"^4[",null,"^50",["^W",[null,null]],"^8",1,"^51",false,"^7",78,"^52",["^J",["^53","^54"]],"^9",78,"^55",1,"^56",true,"^4P",["^W",["^4Q",["^W",[[["^ ","^4R",["^4S","^4T","^4U","^68","^69"],"^4V","^4W"]]]]]]],"~$move-piece",["^ ","^4O",null,"^5",["^ ","^6","tetris/game.cljc","^7",62,"^8",7,"^9",62,"^:",17,"^4P",["^W",["^4Q",["^W",[[["^ ","^4R",["^59","^5:"],"^4V","^5;"],"^5U"]]]]]],"^K","^1J","^6","tetris/game.cljc","^:",17,"^4Y",["^W",[["~$p__55577","^5U"]]],"^4[",null,"^50",["^W",[null,null]],"^8",1,"^51",false,"^7",62,"^52",["^J",["^53","^54"]],"^9",62,"^55",2,"^56",true,"^4P",["^W",["^4Q",["^W",[[["^ ","^4R",["^59","^5:"],"^4V","^5;"],"^5U"]]]]]],"~$piece-down",["^ ","^4O",null,"^5",["^ ","^6","tetris/game.cljc","^7",68,"^8",7,"^9",68,"^:",17,"^4P",["^W",["^4Q",["^W",[["^5;"]]]]]],"^K","^2A","^6","tetris/game.cljc","^:",17,"^4Y",["^W",[["^5;"]]],"^4[",null,"^50",["^W",[null,null]],"^8",1,"^51",false,"^7",68,"^52",["^J",["^53","^54"]],"^9",68,"^55",1,"^56",true,"^4P",["^W",["^4Q",["^W",[["^5;"]]]]]]],"^U",["^ ","^Q","^Q"],"~:cljs.analyzer/constants",["^ ","^S",["^J",["~:L","~:down","~:mid","~:I","~:lines-cleared","~:O","~:coords","~:game-over?","~:type","~:J","~:Z","~:T","~:level","~:score","~:locked?","~:ghost-piece","~:next3","~:lock-delay?","~:active-piece","~:right","~:S","~:board","~:left"]],"~:order",["^6D","^6@","^6B","~:I","~:J","~:L","~:O","~:S","~:T","~:Z","^6M","^6K","^6C","^6F","^6E","^6A","^6I","^6N","^6L","^6?","^6H","^6J","^6G"]],"^Y",["^ "],"^Z",["^ "],"^[",["^R","^Q"]],"^N","^L","~:ns-specs",["^ "],"~:ns-spec-vars",["^J",[]],"~:compiler-options",["^2V",[["^6R","~:static-fns"],true,["^6R","~:shadow-tweaks"],null,["^6R","~:source-map-inline"],null,["^6R","~:elide-asserts"],false,["^6R","~:optimize-constants"],null,["^6R","^14"],null,["^6R","~:external-config"],null,["^6R","~:tooling-config"],null,["^6R","~:emit-constants"],null,["^6R","~:load-tests"],null,["^6R","~:form-size-threshold"],null,["^6R","~:data-readers"],null,["^6R","~:infer-externs"],"~:auto",["^6R","^16"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^6R","~:fn-invoke-direct"],null,["^6R","~:source-map"],"/dev/null"]]]